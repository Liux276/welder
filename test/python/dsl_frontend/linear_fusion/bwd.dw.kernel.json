[
  {
    "nodes": [
      3
    ],
    "node_names": [
      "FusedLayer_3"
    ],
    "group_id": 0,
    "input_desc": [
      [
        3,
        0
      ],
      [
        3,
        1
      ],
      [
        3,
        2
      ]
    ],
    "output_desc": [
      [
        3,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group0(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ input2, half* __restrict__ output0) {\n  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 16, 16, 16, half> output0_wmma_accumulator[16];\n  __shared__ half input1_shared[4352];\n  __shared__ half m3_shared[4352];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 16, 16, 16, half, nvcuda::wmma::col_major> input1_shared_wmma_matrix_a[4];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 16, 16, 16, half, nvcuda::wmma::row_major> m3_shared_wmma_matrix_b[4];\n  for (int N2_c_outer_init = 0; N2_c_outer_init < 4; ++N2_c_outer_init) {\n    for (int N1_c_outer_init = 0; N1_c_outer_init < 4; ++N1_c_outer_init) {\n      nvcuda::wmma::fill_fragment(output0_wmma_accumulator[((N2_c_outer_init * 4) + N1_c_outer_init)], 0.000000e+00f);\n    }\n  }\n  for (int N0_outer = 0; N0_outer < 64; ++N0_outer) {\n    __syncthreads();\n    *(uint4*)(input1_shared + (((((int)threadIdx.y) * 272) + ((((int)threadIdx.x) >> 4) * 136)) + ((((int)threadIdx.x) & 15) * 8))) = *(uint4*)(input1 + (((((N0_outer * 131072) + (((int)threadIdx.y) * 8192)) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) >> 7) * 128)) + ((((int)threadIdx.x) & 15) * 8)));\n    *(uint4*)(input1_shared + ((((((int)threadIdx.y) * 272) + ((((int)threadIdx.x) >> 4) * 136)) + ((((int)threadIdx.x) & 15) * 8)) + 1088)) = *(uint4*)(input1 + ((((((N0_outer * 131072) + (((int)threadIdx.y) * 8192)) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) >> 7) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 32768));\n    *(uint4*)(input1_shared + ((((((int)threadIdx.y) * 272) + ((((int)threadIdx.x) >> 4) * 136)) + ((((int)threadIdx.x) & 15) * 8)) + 2176)) = *(uint4*)(input1 + ((((((N0_outer * 131072) + (((int)threadIdx.y) * 8192)) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) >> 7) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 65536));\n    *(uint4*)(input1_shared + ((((((int)threadIdx.y) * 272) + ((((int)threadIdx.x) >> 4) * 136)) + ((((int)threadIdx.x) & 15) * 8)) + 3264)) = *(uint4*)(input1 + ((((((N0_outer * 131072) + (((int)threadIdx.y) * 8192)) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) >> 7) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 98304));\n    for (int ax0_ax1_fused_inner_s = 0; ax0_ax1_fused_inner_s < 4; ++ax0_ax1_fused_inner_s) {\n      m3_shared[(((((int)threadIdx.y) * 136) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s)] = ((((half)((((float)input0[(((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s)]) * 5.000000e-01f) * (1.000000e+00f + erff((((float)input0[(((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s)]) * 7.071068e-01f))))) * input2[(((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s)]) * __float2half_rn(2.000000e+00f));\n    }\n    for (int ax0_ax1_fused_inner_s_1 = 0; ax0_ax1_fused_inner_s_1 < 4; ++ax0_ax1_fused_inner_s_1) {\n      m3_shared[((((((int)threadIdx.y) * 136) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_1) + 544)] = ((((half)((((float)input0[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_1) + 65536)]) * 5.000000e-01f) * (1.000000e+00f + erff((((float)input0[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_1) + 65536)]) * 7.071068e-01f))))) * input2[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_1) + 65536)]) * __float2half_rn(2.000000e+00f));\n    }\n    for (int ax0_ax1_fused_inner_s_2 = 0; ax0_ax1_fused_inner_s_2 < 4; ++ax0_ax1_fused_inner_s_2) {\n      m3_shared[((((((int)threadIdx.y) * 136) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_2) + 1088)] = ((((half)((((float)input0[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_2) + 131072)]) * 5.000000e-01f) * (1.000000e+00f + erff((((float)input0[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_2) + 131072)]) * 7.071068e-01f))))) * input2[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_2) + 131072)]) * __float2half_rn(2.000000e+00f));\n    }\n    for (int ax0_ax1_fused_inner_s_3 = 0; ax0_ax1_fused_inner_s_3 < 4; ++ax0_ax1_fused_inner_s_3) {\n      m3_shared[((((((int)threadIdx.y) * 136) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_3) + 1632)] = ((((half)((((float)input0[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_3) + 196608)]) * 5.000000e-01f) * (1.000000e+00f + erff((((float)input0[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_3) + 196608)]) * 7.071068e-01f))))) * input2[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_3) + 196608)]) * __float2half_rn(2.000000e+00f));\n    }\n    for (int ax0_ax1_fused_inner_s_4 = 0; ax0_ax1_fused_inner_s_4 < 4; ++ax0_ax1_fused_inner_s_4) {\n      m3_shared[((((((int)threadIdx.y) * 136) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_4) + 2176)] = ((((half)((((float)input0[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_4) + 262144)]) * 5.000000e-01f) * (1.000000e+00f + erff((((float)input0[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_4) + 262144)]) * 7.071068e-01f))))) * input2[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_4) + 262144)]) * __float2half_rn(2.000000e+00f));\n    }\n    for (int ax0_ax1_fused_inner_s_5 = 0; ax0_ax1_fused_inner_s_5 < 4; ++ax0_ax1_fused_inner_s_5) {\n      m3_shared[((((((int)threadIdx.y) * 136) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_5) + 2720)] = ((((half)((((float)input0[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_5) + 327680)]) * 5.000000e-01f) * (1.000000e+00f + erff((((float)input0[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_5) + 327680)]) * 7.071068e-01f))))) * input2[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_5) + 327680)]) * __float2half_rn(2.000000e+00f));\n    }\n    for (int ax0_ax1_fused_inner_s_6 = 0; ax0_ax1_fused_inner_s_6 < 4; ++ax0_ax1_fused_inner_s_6) {\n      m3_shared[((((((int)threadIdx.y) * 136) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_6) + 3264)] = ((((half)((((float)input0[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_6) + 393216)]) * 5.000000e-01f) * (1.000000e+00f + erff((((float)input0[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_6) + 393216)]) * 7.071068e-01f))))) * input2[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_6) + 393216)]) * __float2half_rn(2.000000e+00f));\n    }\n    for (int ax0_ax1_fused_inner_s_7 = 0; ax0_ax1_fused_inner_s_7 < 4; ++ax0_ax1_fused_inner_s_7) {\n      m3_shared[((((((int)threadIdx.y) * 136) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_7) + 3808)] = ((((half)((((float)input0[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_7) + 458752)]) * 5.000000e-01f) * (1.000000e+00f + erff((((float)input0[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_7) + 458752)]) * 7.071068e-01f))))) * input2[((((((N0_outer * 524288) + (((int)threadIdx.y) * 16384)) + ((((int)blockIdx.x) & 127) * 128)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_inner_s_7) + 458752)]) * __float2half_rn(2.000000e+00f));\n    }\n    __syncthreads();\n    for (int N0_inner_outer = 0; N0_inner_outer < 2; ++N0_inner_outer) {\n      for (int ax1_outer = 0; ax1_outer < 4; ++ax1_outer) {\n        nvcuda::wmma::load_matrix_sync(input1_shared_wmma_matrix_a[ax1_outer], (&(input1_shared[(((N0_inner_outer * 2176) + ((((int)threadIdx.y) >> 1) * 64)) + (ax1_outer * 16))])), 136);\n      }\n      for (int ax1_outer_1 = 0; ax1_outer_1 < 4; ++ax1_outer_1) {\n        nvcuda::wmma::load_matrix_sync(m3_shared_wmma_matrix_b[ax1_outer_1], (&(m3_shared[(((N0_inner_outer * 2176) + ((((int)threadIdx.y) & 1) * 64)) + (ax1_outer_1 * 16))])), 136);\n      }\n      for (int N2_c_outer = 0; N2_c_outer < 4; ++N2_c_outer) {\n        for (int N1_c_outer = 0; N1_c_outer < 4; ++N1_c_outer) {\n          nvcuda::wmma::mma_sync(output0_wmma_accumulator[((N2_c_outer * 4) + N1_c_outer)], input1_shared_wmma_matrix_a[N2_c_outer], m3_shared_wmma_matrix_b[N1_c_outer], output0_wmma_accumulator[((N2_c_outer * 4) + N1_c_outer)]);\n        }\n      }\n    }\n  }\n  __syncthreads();\n  for (int N2_inner_inner_outer = 0; N2_inner_inner_outer < 4; ++N2_inner_inner_outer) {\n    for (int N1_inner_inner_outer = 0; N1_inner_inner_outer < 4; ++N1_inner_inner_outer) {\n      nvcuda::wmma::store_matrix_sync((&(output0[(((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.y) >> 1) * 1048576)) + (N2_inner_inner_outer * 262144)) + ((((int)blockIdx.x) & 127) * 128)) + ((((int)threadIdx.y) & 1) * 64)) + (N1_inner_inner_outer * 16))])), output0_wmma_accumulator[((N2_inner_inner_outer * 4) + N1_inner_inner_outer)], 16384, nvcuda::wmma::mem_row_major);\n    }\n  }\n  __syncthreads();\n}\n\n",
    "block_size": [
      32,
      4,
      1
    ],
    "grid_size": [
      4096,
      1,
      1
    ],
    "latency": 5.714944362640381,
    "name": "Group0",
    "gain": 0
  }
]